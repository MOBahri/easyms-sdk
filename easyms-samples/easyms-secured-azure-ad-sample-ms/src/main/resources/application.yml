server:
  port: 8092

#Admin configuration
info:
  name: @app.id@
  description: @app.id@
  version: @pom.version@
  stage: local


spring:
  application:
    id: @app.id@
    name: @app.id@
#  jpa:
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#  datasource:
#    url: ${datasource.url}
#    username: ${datasource.username}
#    password: ${datasource.password}
#    driver-class-name: org.postgresql.Driver
  liquibase:
    change-log: classpath:config/db/db.changelog-master.xml
  profiles.active: dev
  boot:
    admin:
      client:
        url: ${boot.admin.client.url}
        username: ${boot.admin.client.username}
        password: ${boot.admin.client.password}
        instance:
          metadata:
            enable-oauth2: true
  security:
    oauth2:
      client:
        provider:
          azure:
            jwk-set-uri: https://login.microsoftonline.com/${easyms.azure.activedirectory.tenant}/discovery/keys

azure:
  activedirectory:
    jwtConnectTimeout: 3000
    jwtReadTimeout: 3000
    session-stateless: true
    client-id: ${easyms.azure.activedirectory.clientId}
    appIdUri: ${easyms.azure.activedirectory.appIdUri}


swagger:
  paths: /api.*
  securityDefinitions:
    oauthSecurity:
      type: oauth2
      tokenUrl: https://login.microsoftonline.com/${easyms.azure.activedirectory.tenant}/oauth2/v2.0/token
      tokenRequestUrl: https://login.microsoftonline.com/${easyms.azure.activedirectory.tenant}/oauth2/v2.0/authorize
      clientId: ${easyms.azure.activedirectory.swaggerclientId:clientId}
      scopes: ${easyms.azure.activedirectory.swagger.scopes}


easyms:
  secured:
    azuread :
      enabled: true
      rolesToRoles:
        SWAGGER:
          - ADMIN_CLIENT
          - SUPER_ADMIN_CLIENT
      rolesToAuthorities:
        ADMIN_CLIENT:
          - MODIFY_CLIENT
          - READ_CLIENT
        SUPER_ADMIN_CLIENT:
          - MODIFY_CLIENT
          - READ_CLIENT
          - DELETE_CLIENT


  logging:
    logstash: # Forward logs to logstash over a socket, used by LoggingConfig
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512

management.endpoints.web.exposure.include: "*"

---
spring:
  profiles: sample

liquibase.contexts: data


---
spring:
  profiles: h2
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  datasource:
    url: jdbc:h2:mem:sdkdb;DB_CLOSE_DELAY=-1
    username: sdk
    password: secret
    driver-class-name: org.h2.Driver
  h2.console:
    enabled: true
    path: /h2-console

---
spring:
  profiles: test
  jpa:
    hibernate.ddl-auto: none
  h2.console.enabled: false

easyms:
  azure:
    activedirectory:
      tenant: fakeTenant
      clientId: fakeClientId
      appIdUri : fakeAppIdUri
      swaggerclientId: fakeSwaggerClientId
      swagger:
        scopes: fakeSwaggerScopes

spring.profiles.include:
  - h2

liquibase.contexts: testData
